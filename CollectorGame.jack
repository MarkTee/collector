/** Collector - by Mark Thomas
 *  https://github.com/marktee
 * 
 *  The goal of the game is to collect as many of the items (hollow squares) as 
 *  possible.
 *
 *  The game ends when the player collides with any of the circular enemies.
 *
 *  The player's character can be controlled using the arrow keys.
 *
 *  This game was written to learn more about the Jack programming language, a
 *  custom language used in the Nand2Tetris course.
 *  Learn more here: https://www.nand2tetris.org/
 */
class CollectorGame {
    field Interface interface;
    field Player player;
    field Item item;
    field Enemy enemy;

    field int score; // the player's current score
    
    /** Constructs a new Collector game. */
    constructor CollectorGame new() {
        // initialize the game's interface
        let interface = Interface.new();
        do interface.draw();

        // initialize an item
        let item = Item.new();
        do item.newPosition();
        
        // initialize the player character, and set their score to 0
        let player = Player.new();
        let score = 0;

        let enemy = Enemy.new();

        return this;
    }

    /** Frees memory and destroys the object. */
    method void dispose() {
        do Memory.deAlloc(interface);
        do Memory.deAlloc(this);
        return;
    }
    
    /** Allows the game to run. */
    method void run() {
        var char key; // the key that's currently being pressed by the user
        var boolean running; // whether the game is running
        var int playerX, playerY; // player character's coordinates
        let key = 0;
        let running = true;
        
        do player.draw(true);

        // main game loop
        while (running) {
           let key = Keyboard.keyPressed();
            
            // handle valid key presses
            if (key = 81) { let running = false; } // q key
            if (key = 131) { do player.move(1); } // up arrow key
            if (key = 130) { do player.move(2); } // left arrow key
            if (key = 133) { do player.move(3); } // down arrow key
            if (key = 132) { do player.move(4); } // right arrow key  

            let playerX = player.getX();
            let playerY = player.getY();

            if ((playerX = item.getX()) & (playerY = item.getY())) {
                // update scoreboard
                let score = score + 1;
                do interface.updateScore(score);
                // generate new item position
                do item.newPosition();
                // spawn an enemy
                do enemy.spawn(playerX, playerY);
            }

            do Sys.wait(50);
        }
        do dispose();
        return;
    }
 }
